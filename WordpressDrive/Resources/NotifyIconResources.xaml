<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tb="http://www.hardcodet.net/taskbar"
                    xmlns:p="clr-namespace:WordpressDrive.Properties"
                    xmlns:local="clr-namespace:WordpressDrive">

    <!--<Style TargetType="{x:Type ContextMenu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border BorderThickness="1" CornerRadius="4" BorderBrush="Black" x:Name="Border" Background="White">
                        <StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--
        The "shared" directive is needed if we reopen the  window a few times - WPF will otherwise
        reuse the same context menu (which is a resource) again (which will have its DataContext set to the old TaskbarIcon)
  -->
    <ContextMenu x:Shared="false" x:Key="SysTrayMenu">
        <Separator />
        <MenuItem Header="{x:Static p:Resources.umount_drive}" Command="{Binding UmountDriveCommand}" />
        <MenuItem Header="{x:Static p:Resources.syncronize_changes}" Command="{Binding SynchronizeCacheCommand}" />
        <Separator />
        <MenuItem Header="{x:Static p:Resources.open_settings}" Command="{Binding ShowSettingsWindowCommand}" />
        <MenuItem Header="{x:Static p:Resources.close_settings}" Command="{Binding HideSettingsWindowCommand}" />
        <Separator />
        <MenuItem Header="{x:Static p:Resources.Exit}" Command="{Binding ExitApplicationCommand}" />
    </ContextMenu>


    <!-- the application's NotifyIcon - started from App.xaml.cs. Declares its own view model. -->
    <tb:TaskbarIcon x:Key="NotifyIcon"
                    IconSource="{Binding Icon, Mode=OneWay}"
                    ToolTipText="Double-click for settings window, right-click for menu"
                    DoubleClickCommand="{Binding OnDoubleClickCommand}"
                    LeftClickCommand="{Binding ShowSettingsWindowCommand}"
                    ContextMenu="{StaticResource SysTrayMenu}">


        <!-- self-assign a data context (could also be done programmatically) -->
        <tb:TaskbarIcon.DataContext>
            <local:NotifyIconViewModel />
        </tb:TaskbarIcon.DataContext>

        <tb:TaskbarIcon.TrayToolTip>
            <local:IconToolTip Opacity="1.0" />
        </tb:TaskbarIcon.TrayToolTip>


    </tb:TaskbarIcon>

</ResourceDictionary>